version: '3.4'

x-common:
  &common
  image: apache/airflow:latest
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./datasource:/opt/airflow/datasource
    - ./dataproc:/opt/airflow/dataproc
    - ./csv:/opt/airflow/csv
    - ./docker:/opt/airflow/docker
    - /var/run/docker.sock:/var/run/docker.sock
  environment:
    - GOOGLE_APPLICATION_CREDENTIALS=/opt/airflow/dags/credentials/starlit-cocoa-423615-r6-2cc261b108bb.json


x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  postgres:
    image: postgres:13
    container_name: postgres_airflow
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist PostgreSQL data

  scheduler:
    <<: [*common, *depends-on]
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"
    environment:
      - PIP_ADDITIONAL_REQUIREMENTS=pymysql apache-airflow-providers-google

  webserver:
    <<: [*common, *depends-on]
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
    environment:
      - PIP_ADDITIONAL_REQUIREMENTS=pymysql apache-airflow-providers-google
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./datasource:/opt/airflow/datasource
      - ./dataproc:/opt/airflow/dataproc
      - ./csv:/opt/airflow/csv
      - ./docker:/opt/airflow/docker

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins /sources/script /sources/ipynb
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins,script,ipynb}
        exec /entrypoint airflow version
    environment:
      - PIP_ADDITIONAL_REQUIREMENTS=pymysql apache-airflow-providers-google

volumes:
  postgres_data: 
